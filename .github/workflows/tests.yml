name: Tests

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main"]
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Install dependencies
        run: cargo build --release

      - name: Copy environment variables
        run: cp .env-sample .env

      - name: Set up Docker Compose
        working-directory: docker
        run: docker compose --env-file .env-sample up -d

      - name: Wait for services to be ready
        run: |
          until curl -sS http://localhost:7474; do
            echo "Waiting for Neo4j to be ready..."
            sleep 10
          done
          until redis-cli -p 6379 ping | grep "PONG"; do
            echo "Waiting for Redis to be ready..."
            sleep 10
          done

      - name: Run the service
        run: ./target/release/service &

      - name: Run tests
        run: cargo test

      - name: Tear down Docker Compose
        if: always()
        working-directory: docker
        run: docker-compose down --volumes
